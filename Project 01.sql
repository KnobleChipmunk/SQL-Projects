/*  TEMPLATE PROJECT #1 */

--STEP 1: ENTER THE [REDACTED] ID AND [REDACTED]ID THAT [REDACTED] NEEDS TO HAVE RESET, WITH @ID03 = 0 AND @COMMIT = 0.
--STEP 2: IF THERE ARE NO VALIDATION MESSAGES AND THE DATA LOOKS CORRECT, CHANGE COMMIT = 1 AND RUN THE SCRIPT AGAIN.
			
DECLARE 
		@ID01 INT = 00000		--ENTER THE [REDACTED] ID
	,	@ID02 INT = 0000	    --ENTER THE [REDACTED] ID (MUST BE 1234/5678/9012)
	,	@ID03 BIT = 0		    --ONLY NEEDED IF [REDACTED] EXIST: CONFIRM THAT [REDACTED] HAS BEEN NOTIFIED BY SETTING TO 1
	,	@COMMIT BIT = 0			--0 WILL ROLLBACK, 1 WILL COMMIT

-----------------------------------------------------
-------------DO NOT EDIT BELOW THIS LINE-------------
----------------------------------------------------- 
DECLARE
		@ID04 INT = (SELECT TABLE_NAME04.COLUMN02 FROM TABLE_NAME04 WITH (NOLOCK) WHERE TABLE_NAME04.PK = @ID01)
	,	@ID05 DATETIME = (SELECT TABLE_NAME04.COLUMN03 FROM TABLE_NAME04 WITH (NOLOCK) WHERE TABLE_NAME04.PK = @ID01)
	,	@ID06 INT = 0
	,	@ID07 VARCHAR(30)
	,	@ID08 BIT = 0
	,	@ENDMESSAGE BIT = 0
	,	@ROWCOUNT INT = 0
------------------------------------------------------------------------------------------------- 
BEGIN TRAN TEMPLATEPROJECTNUM01

IF OBJECT_ID('TEMPDB..#TEMP_TABLE01') IS NOT NULL DROP TABLE #TEMP_TABLE01
IF OBJECT_ID('TEMPDB..#TEMP_TABLE02') IS NOT NULL DROP TABLE #TEMP_TABLE02

--VALIDATIONS START

	--VALIDATE [REDACTED] BEING RESET
	IF @ID02 NOT IN (1234,5678,9012)
		  
			BEGIN  
     			SET @COMMIT = 0
				SELECT 'THIS SCRIPT CAN ONLY RESET TABLE_NAME22 2059,2529,2532.' AS [VALIDATION], 'REVIEW [REDACTED]ID.' AS [ROLLED BACK]
				SET @ID08 = 1
			 END

	--CHECK FOR [REDACTED] > 1
	--[REDACTED]
	--IF [REDACTED] IS 2 OR HIGHER, [REDACTED] CAN BE [REDACTED].
	IF EXISTS(
	           SELECT 1 FROM DBSCHEMA.TABLE_NAME01 WITH (NOLOCK) WHERE TABLE_NAME.COLUMN01 = @ID01 AND TABLE_NAME.COLUMN02 > 1)

			BEGIN  
     			SET @COMMIT = 0
				SELECT '[REDACTED] IS 2 OR LATER.' AS [VALIDATION], 'REVIEW [REDACTED].' AS [ROLLED BACK]
				SET @ID08 = 1
			END
			
	--CHECK IF APPROVED [REDACTED]  EXISTS
	--THIS CHECKS TO SEE IF THE [REDACTED]  IS APPROVED OR NOT, OR HAS BEEN [REDACTED]. 
	--WE DO NOT WANT TO ADJUST [REDACTED] ON AN APPROVED [REDACTED]  UNLESS THE [REDACTED] ENTRY HAS AN [REDACTED] ASSIGNED.  

	IF EXISTS(
	           SELECT 1 FROM DBSCHEMA.TABLE_NAME01 WITH (NOLOCK) WHERE TABLE_NAME.COLUMN01 = @ID01 AND TABLE_NAME.COLUMN02 = 1
			 )

	AND NOT EXISTS(  
					SELECT 1  
					FROM DBSCHEMA.TABLE_NAME02 WITH (NOLOCK) 
					JOIN DBSCHEMA.TABLE_NAME03 TABLE_ALIAS01 WITH (NOLOCK) ON TABLE_ALIAS01.PK = TABLE_NAME02.FK   
					WHERE TABLE_NAME02.COLUMN01 = @ID01  
					AND TABLE_ALIAS01.COLUMN02 IS NOT NULL 
					AND TABLE_ALIAS01.COLUMN03 IS NOT NULL
					AND TABLE_ALIAS01.COLUMN04 = 0
					AND TABLE_ALIAS01.COLUMN05 IS NULL
					AND TABLE_ALIAS01.COLUMN06 IS NULL
					AND TABLE_ALIAS01.COLUMN07 IS NULL
					AND TABLE_ALIAS01.COLUMN08 IS NULL
				  )  

			 BEGIN  
     			SET @COMMIT = 0
				SELECT 'AN APPROVED [REDACTED] DOES NOT EXIST.' AS [VALIDATION], 'PLEASE REVIEW.' AS [ROLLED BACK]
				SET @ID08 = 1
			 END

	--@ID06 UPDATES

	IF EXISTS(
	           SELECT 1 FROM DBSCHEMA.TABLE_NAME04 WHERE TABLE_NAME04.PK = @ID01 AND TABLE_NAME04.COLUMN04 = 'R'
			 )
	AND EXISTS(
	           SELECT 1 FROM TABLE_NAME05 WHERE TABLE_NAME05.COLUMN01 LIKE '%[REDACTED]%' AND TABLE_NAME05.COLUMN02 < CAST(GETDATE() AS DATE)
			   )

			   SET @ID06 = 1234

	IF EXISTS(
	           SELECT 1 FROM DBSCHEMA.TABLE_NAME04 WHERE TABLE_NAME04.PK = @ID01 AND TABLE_NAME04.COLUMN04 = 'R'
			 )
	AND EXISTS(
	           SELECT 1 FROM TABLE_NAME05 WHERE TABLE_NAME05.COLUMN01 LIKE '%[REDACTED]%' AND TABLE_NAME05.COLUMN02 > CAST(GETDATE() AS DATE)
			   )

			   SET @ID06 = 5678

	--@ID03 CHECKS
	IF @ID03 = 0

		BEGIN

			--CHECK TO SEE IF THE [REDACTED] HAS BEEN [REDACTED]
			IF EXISTS(
					   SELECT 1 FROM TABLE_NAME06 WITH (NOLOCK) 
					   WHERE TABLE_NAME06.COLUMN01 = @ID01
					   AND TABLE_NAME06.COLUMN02 IN (1234, @ID06)
					   AND (
							 TABLE_NAME06.COLUMN03 IS NOT NULL
							 OR TABLE_NAME06.COLUMN04 IS NOT NULL
							 OR TABLE_NAME06.COLUMN05 IS NOT NULL
							 OR TABLE_NAME06.COLUMN06 IS NOT NULL
							 OR TABLE_NAME06.COLUMN07 IS NOT NULL
							 OR TABLE_NAME06.COLUMN08 IS NOT NULL
							)
					  )

					 BEGIN  
						SET @COMMIT = 0
						SELECT 'THIS [REDACTED]  HAS BEEN [REDACTED]' AS [VALIDATION], 'RECOMMEND CREATING A NEW [REDACTED]' AS [MESSAGE]
						SELECT 'NOTIFY [REDACTED] OF THIS BEFORE COMMIT!' AS [IS AGENCY AWARE?]
						--SHOW THE [REDACTED] 
						SELECT TABLE_NAME06.PK [SIGNED [REDACTED]  ORDER], TABLE_NAME06.COLUMN09, (SELECT TABLE_NAME07.COLUMN01 FROM TABLE_NAME07 WHERE TABLE_NAME07.PK = TABLE_NAME06.COLUMN02) AS 'TABLE_NAME07.COLUMN01', TABLE_NAME06.COLUMN10,
						TABLE_NAME06.COLUMN11, TABLE_NAME06.COLUMN12, TABLE_NAME06.COLUMN03, TABLE_NAME06.COLUMN07,
						TABLE_NAME06.COLUMN05, TABLE_NAME06.COLUMN07, TABLE_NAME06.COLUMN04, TABLE_NAME06.COLUMN06, TABLE_NAME06.COLUMN08
						FROM TABLE_NAME03 WITH (NOLOCK) 
						WHERE TABLE_NAME06.COLUMN01 = @ID01
						AND TABLE_NAME06.COLUMN02 IN (1234, @ID06)
						SET @ENDMESSAGE = 1
						SET @ID08 = 1
					 END

			--CHECK FOR [REDACTED]
			IF EXISTS(
					   SELECT 1 FROM TABLE_NAME06 TABLE_ALIAS02
					   WHERE TABLE_NAME06.COLUMN01 = @ID01
					   AND TABLE_NAME06.COLUMN02 NOT IN (1234, @ID06)
					   AND ISNULL(TABLE_ALIAS02.COLUMN13, 1) = 1
					 )

					  BEGIN
						  SET @COMMIT = 0
						  IF OBJECT_ID('TEMPDB..#TEMP_TABLE03') IS NOT NULL DROP TABLE #TEMP_TABLE03 
							  SELECT TABLE_NAME06.PK
							  INTO #TEMP_TABLE03
							  FROM TABLE_NAME06 TABLE_ALIAS02
							  WHERE TABLE_NAME06.COLUMN01 = @ID01
							  AND TABLE_NAME06.COLUMN02 NOT IN (1234, @ID06)
							  AND TABLE_NAME06.COLUMN13 = 1
						  SELECT '[REDACTED]' AS [VALIDATION]
							   , '[REDACTED] = '+CAST(@ID01 AS VARCHAR(10))+', [REDACTED] = '+CAST(TABLE_NAME06.PK AS VARCHAR(10)) AS [MESSAGE] FROM #TEMP_TABLE03 
						  SELECT 'NOTIFY [REDACTED] OF THIS BEFORE COMMIT!' AS [REDACTED]
						  SET @ENDMESSAGE = 1
						  SET @ID08 = 1

						END
					
			--CHECK FOR [REDACTED]
			DECLARE @ID13 INT
				,	@ID14 INT

			IF EXISTS(
					  SELECT 1 FROM TABLE_NAME05 
					  WHERE TABLE_NAME05.COLUMN01 = '[REDACTED]'
					  AND TABLE_NAME05.COLUMN02 <> 'DO NOT INCLUDE'
					 )

			AND EXISTS(
					   SELECT 1 FROM TABLE_NAME04 TABLE_ALIAS03 
					   WHERE TABLE_NAME04.COLUMN02 = @ID04
					   AND TABLE_NAME04.PK > @ID01
					   AND TABLE_NAME04.COLUMN03 >= @ID05
					   AND TABLE_NAME04.COLUMN04 <> '[REDACTED]'
					   AND EXISTS(
								  SELECT 1 FROM DBSCHEMA.TABLE_NAME08 TABLE_ALIAS04 
								   JOIN DBSCHEMA.TABLE_NAME09 TABLE_ALIAS05 ON TABLE_ALIAS05.PK = TABLE_ALIAS04.COLUMN02 
								   WHERE TABLE_ALIAS04.COLUMN01 = @ID04
								   AND TABLE_ALIAS04.COLUMN02 IN(
													   SELECT TABLE_ALIAS06.COLUMN02 FROM DBSCHEMA.TABLE_NAME08 TABLE_ALIAS06
													   JOIN TABLE_NAME06 TABLE_ALIAS02ON TABLE_ALIAS02.TABLE_NAME06.PK = TABLE_ALIAS06.COLUMN03
													   WHERE TABLE_ALIAS06.PK != TABLE_ALIAS04.PK 
													   AND TABLE_ALIAS06.COLUMN03 != TABLE_ALIAS04.COLUMN03  --NOT THE SAME [REDACTED]
													   AND TABLE_ALIAS03.COLUMN02 = 1234 --IS A [REDACTED] 
													   AND TABLE_ALIAS06.COLUMN02 = TABLE_ALIAS04.COLUMN02
													   AND TABLE_ALIAS03.COLUMN01 > @ID01 --SUBSEQUENT [REDACTED] 
													   AND TABLE_ALIAS06.COLUMN01 = @ID04
													)
								)
					  )

					  BEGIN

						  SET @COMMIT = 0
						  SELECT @ID13 = COLUMN03
						  FROM DBSCHEMA.TABLE_NAME08 TABLE_ALIAS04 
				   		  JOIN DBSCHEMA.TABLE_NAME09 TABLE_ALIAS05 ON TABLE_ALIAS05.PK = TABLE_ALIAS04.COLUMN02 
						  WHERE TABLE_ALIAS04.COLUMN01 = @ID04
						  AND TABLE_ALIAS04.COLUMN02 IN(
											  SELECT TABLE_ALIAS06.COLUMN02 FROM DBSCHEMA.TABLE_NAME08 TABLE_ALIAS06
											  JOIN TABLE_NAME06 TABLE_ALIAS02ON TABLE_ALIAS02.TABLE_NAME06.PK = TABLE_ALIAS06.COLUMN03 
											  WHERE TABLE_ALIAS06.PK!= TABLE_ALIAS04.PK 
											  AND TABLE_ALIAS06.COLUMN03 != TABLE_ALIAS04.COLUMN03  --NOT THE SAME [REDACTED]
											  AND TABLE_ALIAS02.TABLE_NAME06.COLUMN02 = 1234 --IS A [REDACTED] 
											  AND TABLE_ALIAS06.COLUMN02 = TABLE_ALIAS04.COLUMN02
											  AND TABLE_ALIAS02.TABLE_NAME06.COLUMN01 > @ID01 --SUBSEQUENT [REDACTED] 
											  AND TABLE_ALIAS06.COLUMN01 = @ID04
											 )
							SELECT @ID14 = (SELECT TABLE_NAME06.COLUMN01 FROM TABLE_NAME06 WHERE TABLE_NAME06.PK = @ID13)
							SELECT 'MEDS FROM THIS POC EXIST IN A NEWER [REDACTED] ' AS [VALIDATION]
								 , '[REDACTED] = '+CAST(@ID14 AS VARCHAR(10))+', [REDACTED] = '+CAST(@ID13 AS VARCHAR(10)) AS [MESSAGE]
							SELECT 'NOTIFY [REDACTED] OF THIS BEFORE COMMIT!' AS [REDACTED]
							SET @ENDMESSAGE = 1
							SET @ID08 = 1

						END

			--CHECK FOR [REDACTED]
			IF EXISTS(
					  SELECT 1 FROM TABLE_NAME05 
					  WHERE TABLE_NAME05.COLUMN01 = '[REDACTED]'
					  AND TABLE_NAME05.COLUMN02 <> 'DO NOT INCLUDE'
					 )

			AND EXISTS(
					   SELECT 1 FROM TABLE_NAME04 TABLE_ALIAS03 
					   WHERE TABLE_NAME04.COLUMN02 = @ID04
					   AND TABLE_NAME04.PK > @ID01
					   AND TABLE_NAME04.COLUMN03 >= @ID05
					   AND TABLE_NAME04.COLUMN04 <> 'STATUS'
					   AND EXISTS(
								  SELECT 1 FROM DBSCHEMA.TABLE_NAME08 TABLE_ALIAS04
								  JOIN DBSCHEMA.TABLE_NAME09 TABLE_ALIAS05 ON TABLE_ALIAS05.PK = TABLE_ALIAS04.COLUMN02
								  JOIN TABLE_NAME06 TABLE_ALIAS02ON TABLE_ALIAS02.TABLE_NAME06.PK = TABLE_ALIAS04.COLUMN03
								  WHERE TABLE_ALIAS04.COLUMN01 = @ID04 
								  AND ISNULL(TABLE_ALIAS02.TABLE_NAME06.COLUMN13, 1) = 1 AND TABLE_ALIAS02.TABLE_NAME06.COLUMN01 > @ID01  --IS IN A GREATER [REDACTED] 
								  AND TABLE_ALIAS02.TABLE_NAME06.COLUMN02 != 1234 --IS NOT A [REDACTED]
								  AND  TABLE_ALIAS04.COLUMN02 IN (
														 SELECT TABLE_ALIAS05.PK FROM DBSCHEMA.TABLE_NAME09 TABLE_ALIAS05 
														 JOIN DBSCHEMA.TABLE_NAME08 TABLE_ALIAS06 ON TABLE_ALIAS06.COLUMN02= TABLE_ALIAS05.PK
														 WHERE TABLE_ALIAS05.PK = TABLE_ALIAS05.PK
														 AND TABLE_ALIAS06.PK != TABLE_ALIAS04.PK
														 AND TABLE_ALIAS06.COLUMN01 = @ID04
														) 
								)
					  )

					  BEGIN

						  SET @COMMIT = 0
						  SELECT @ID13 = COLUMN03
						  FROM DBSCHEMA.TABLE_NAME08 TABLE_ALIAS04
						  JOIN DBSCHEMA.TABLE_NAME09 TABLE_ALIAS05 ON TABLE_ALIAS05.PK = TABLE_ALIAS04.COLUMN02
						  JOIN TABLE_NAME06 TABLE_ALIAS02 ON TABLE_ALIAS02.TABLE_NAME06.PK = TABLE_ALIAS04.COLUMN03
						  WHERE TABLE_ALIAS04.COLUMN01 = @ID04 
						  AND ISNULL(TABLE_ALIAS02.TABLE_NAME06.COLUMN13, 1) = 1 AND TABLE_ALIAS02.TABLE_NAME06.COLUMN01 > @ID01  --IS IN A GREATER [REDACTED] 
						  AND TABLE_ALIAS02.TABLE_NAME06.COLUMN02 != 1234 --IS NOT A [REDACTED]
						  AND  TABLE_ALIAS04.COLUMN02 IN (
												SELECT TABLE_ALIAS05.PK FROM DBSCHEMA.TABLE_NAME09 TABLE_ALIAS05 
												JOIN DBSCHEMA.TABLE_NAME08 TABLE_ALIAS06 ON TABLE_ALIAS06.COLUMN02= TABLE_ALIAS05.PK
												WHERE TABLE_ALIAS05.PK = TABLE_ALIAS05.PK
												AND TABLE_ALIAS06.PK != TABLE_ALIAS04.PK
												AND TABLE_ALIAS06.COLUMN01 = @ID04
											   )
							SELECT @ID14 = (SELECT TABLE_NAME06.COLUMN01 FROM TABLE_NAME06 WHERE TABLE_NAME06.PK = @ID13)
							SELECT '[REDACTED]' AS [VALIDATION]
								 , '[REDACTED] = '+CAST(@ID14 AS VARCHAR(10))+', [REDACTED] = '+CAST(@ID13 AS VARCHAR(10)) AS [MESSAGE]
							SELECT 'NOTIFY [REDACTED] OF THIS BEFORE COMMIT!' AS [REDACTED]
							SET @ENDMESSAGE = 1
							SET @ID08 = 1

						END

		END

		--CHECK [REDACTED]
 
		BEGIN

			SET @ID07 = (SELECT TABLE_ALIAS07.COLUMN1
								FROM TABLE_NAME10 TABLE_ALIAS07
								JOIN TABLE_NAME11 TABLE_ALIAS08 ON TABLE_ALIAS08.PK = TABLE_ALIAS07.FK
								JOIN TABLE_NAME06 TABLE_ALIAS02 ON TABLE_ALIAS02.COLUMN01 = TABLE_ALIAS08.COLUMN01 AND TABLE_ALIAS02.COLUMN02 IN (1234, @ID06)
								JOIN TABLE_NAME12 TABLE_ALIAS11 ON TABLE_ALIAS11.PK = TABLE_ALIAS08.COLUMN10
								JOIN TABLE_NAME04 CE ON CE.TABLE_NAME04.PK = TABLE_ALIAS08.COLUMN01
								JOIN TABLE_NAME13 TABLE_ALIAS12 ON TABLE_ALIAS12.PK = TABLE_ALIAS11.FK
								WHERE TABLE_ALIAS.COLUMN01 = @ID01
								AND TABLE_ALIAS.COLUMN10 = TABLE_ALIAS02.TABLE_NAME06.COLUMN10
								AND TABLE_ALIAS07.PK IN (
													SELECT MAX(PK) 
													FROM TABLE_NAME10 TABLE_ALIAS10
													JOIN TABLE_NAME14 ON TABLE_ALIAS02.PK = TABLE_ALIAS10.FK
													WHERE TABLE_ALIAS10.FK = TABLE_ALIAS.PK
													)
								AND TABLE_ALIAS.PK IN (
												   SELECT MAX(TABLE_ALIAS02.PK) FROM TABLE_NAME11 TABLE_ALIAS08
												   WHERE TABLE_ALIAS.COLUMN10 = TABLE_ALIAS02.TABLE_NAME06.COLUMN10
												   )
							)		
			
		END

		IF @ID07 NOT IN ('[REDACTED]','[REDACTED]')
			BEGIN
				SELECT '>>'+@ID07+'<<' AS [OASIS STATUS], '[REDACTED] NEEDS TO BE [REDACTED] OR [REDACTED]' AS [VALIDATION]
				SET @COMMIT = 0
			END


--VALIDATIONS END

--SETUP START


	--TURN @ID02 INTO TABLE_NAME20.PK
	SELECT MAX(TABLE_NAME20.PK) [TABLE_NAME20.PK]
		INTO #TEMP_TABLE01
		FROM TABLE_NAME20 WITH (NOLOCK) 
		JOIN TABLE_NAME21 WITH (NOLOCK) ON TABLE_NAME21.PK = TABLE_NAME20.FK
		WHERE TABLE_NAME21.COLUMN01 = @ID01
		AND TABLE_NAME21.COLUMN02 = 1234
		AND TABLE_NAME20.COLUMN01 = (SELECT @ID02)

	--NOW DECLARE IT IN A VARIABLE
	DECLARE @ID12 INT = (SELECT TABLE_NAME20.PK FROM #TEMP_TABLE01)

	--INSERT TABLE_NAME22 NEEDING DELETION WHEN [REDACTED]  = 1234
		BEGIN
			SELECT ROW_NUMBER() OVER(ORDER BY TABLE_NAME20.PK ASC) AS [ROW]
			, TABLE_NAME20.PK
			, TABLE_NAME20.COLUMN01
			, MAX(TABLE_NAME20.COLUMN02) OVER (PARTITION BY TABLE_NAME20.COLUMN01) AS TABLE_NAME20.COLUMN02
			, 0 AS [DONE]
			INTO #TEMP_TABLE02
			FROM TABLE_NAME20 WITH (NOLOCK) 
			JOIN TABLE_NAME21 WITH (NOLOCK) ON TABLE_NAME21.PK = TABLE_NAME20.FK
			WHERE TABLE_NAME21.COLUMN01 = @ID01
			AND TABLE_NAME20.COLUMN01 NOT IN (SELECT @ID02)
			AND TABLE_NAME21.COLUMN02 = 1234
			AND TABLE_NAME20.COLUMN01 IN (1234,1234,1234,1234,1234,1234,1234,1234,1234,1234)
		END

	--INSERT [REDACTED]  = 1234 INTO DELETION TABLE WHEN [REDACTED]  = 1234
	IF @ID02 = 1234

		BEGIN
			INSERT INTO #TEMP_TABLE02 ([ROW], TABLE_NAME20.PK, TABLE_NAME20.COLUMN01, TABLE_NAME20.COLUMN02, [DONE])
			SELECT (SELECT MAX([ROW])+1 FROM #TEMP_TABLE02)
					, TABLE_NAME20.PK
					, TABLE_NAME20.COLUMN01
					, TABLE_NAME20.COLUMN02
					, 0
			FROM TABLE_NAME20 WITH (NOLOCK) 
			JOIN TABLE_NAME21 WITH (NOLOCK) ON TABLE_NAME21.PK = TABLE_NAME20.FK
			WHERE TABLE_NAME21.COLUMN01 = @ID01
			AND TABLE_NAME20.COLUMN01 NOT IN (SELECT @ID02)
			AND TABLE_NAME21.COLUMN02 = 1234
			AND TABLE_NAME20.COLUMN01 = 1234
		END

	--INSERT [REDACTED]  IN (1234,1234) INTO DELETION TABLE WHEN [REDACTED]  = 1234
	ELSE IF @ID02 = 1234

		BEGIN
			INSERT INTO #TEMP_TABLE02 ([ROW], TABLE_NAME20.PK, TABLE_NAME20.COLUMN01, TABLE_NAME20.COLUMN02, [DONE])
			SELECT (SELECT MAX([ROW])+1 FROM #TEMP_TABLE02)
					, TABLE_NAME20.PK
					, TABLE_NAME20.COLUMN01
					, TABLE_NAME20.COLUMN02
					, 0
			FROM TABLE_NAME20 WITH (NOLOCK) 
			JOIN TABLE_NAME21 WITH (NOLOCK) ON TABLE_NAME21.PK = TABLE_NAME20.FK
			WHERE TABLE_NAME21.COLUMN01 = @ID01
			AND TABLE_NAME20.COLUMN01 NOT IN (SELECT @ID02)
			AND TABLE_NAME21.COLUMN02 = 1234
			AND TABLE_NAME20.COLUMN01 = 1234
			INSERT INTO #TEMP_TABLE02 ([ROW], TABLE_NAME20.PK, TABLE_NAME20.COLUMN01, TABLE_NAME20.COLUMN02, [DONE])
			SELECT (SELECT MAX([ROW])+1 FROM #TEMP_TABLE02)
					, TABLE_NAME20.PK
					, TABLE_NAME20.COLUMN01
					, TABLE_NAME20.COLUMN02
					, 0
			FROM TABLE_NAME20 WITH (NOLOCK) 
			JOIN TABLE_NAME21 WITH (NOLOCK) ON TABLE_NAME21.PK = TABLE_NAME20.FK
			WHERE TABLE_NAME21.COLUMN01 = @ID01
			AND TABLE_NAME20.COLUMN01 NOT IN (SELECT @ID02)
			AND TABLE_NAME21.COLUMN02 = 1234
			AND TABLE_NAME20.COLUMN01 = 1234
		END


--SETUP END

--CHANGES START


IF @ID08 = 0

	BEGIN

		SELECT 'CURRENT VALUES' AS [BEFORE]

		SELECT (SELECT TABLE_NAME22.COLUMN01 FROM TABLE_NAME22 WHERE TABLE_NAME22.PK = (SELECT @ID02)) AS [[REDACTED] BEING RESET:]
				, TABLE_NAME21.PK
				, TABLE_NAME21.COLUMN02
				, TABLE_NAME20.COLUMN01
				, TABLE_NAME20.COLUMN02
				, TABLE_NAME20.COLUMN03
				, TABLE_NAME20.COLUMN04
				, TABLE_NAME20.COLUMN05
				, TABLE_NAME20.COLUMN06
				, TABLE_NAME20.COLUMN07
				, TABLE_NAME20.COLUMN08
				, TABLE_NAME20.COLUMN09
		FROM TABLE_NAME20 WITH (NOLOCK) 
		JOIN TABLE_NAME21 WITH (NOLOCK) ON TABLE_NAME21.PK = TABLE_NAME20.FK
		WHERE TABLE_NAME21.COLUMN01 = @ID01
		AND TABLE_NAME21.COLUMN02 = 1234
		AND TABLE_NAME20.COLUMN01 = (SELECT @ID02)

		SELECT TABLE_NAME03.PK [REDACTED]
				, TABLE_NAME03.COLUMN01
				, TABLE_NAME03.COLUMN02
				, TABLE_NAME03.COLUMN03
				, TABLE_NAME03.COLUMN04
				, TABLE_NAME03.COLUMN05
				, TABLE_NAME03.COLUMN06
				, TABLE_NAME03.COLUMN07
				, TABLE_NAME03.COLUMN08
				, TABLE_NAME03.COLUMN09
				, TABLE_NAME03.COLUMN10
				, TABLE_NAME03.COLUMN11
				, TABLE_NAME03.COLUMN12
				, TABLE_NAME03.COLUMN13
				, TABLE_NAME03.COLUMN14
				, TABLE_NAME03.COLUMN15
				, TABLE_NAME03.COLUMN16
				, TABLE_NAME03.COLUMN17
				, TABLE_NAME03.COLUMN18
		FROM TABLE_NAME03 WITH (NOLOCK) 
		WHERE TABLE_NAME03.PK = (SELECT TABLE_NAME03.PK 
						FROM TABLE_NAME03
						WHERE TABLE_NAME03.COLUMN02 = 1234 
						AND TABLE_NAME03.COLUMN01 = @ID01
					 )


		--LOOP TO DELETE ALL TABLE_NAME22 PAST DECLARED [REDACTED]
		WHILE EXISTS (SELECT 1 FROM #TEMP_TABLE02 WHERE DONE = 0)

		BEGIN

				DECLARE @ID09 INT = (SELECT TOP 1 [ROW] FROM #TEMP_TABLE02 WHERE [DONE] = 0)
				DECLARE @ID10 INT = (SELECT TOP 1 TABLE_NAME20.COLUMN01 FROM #TEMP_TABLE02 WHERE [ROW] = @ID09)
				DECLARE @ID11 INT = (SELECT TOP 1 TABLE_NAME20.PK FROM #TEMP_TABLE02 WHERE [ROW] = @ID09)

				EXEC STORED_PROC01 @DECLARE01 = @ID01, @DECLARE02 = 1234, @DECLARE03 = @ID10, @DECLARE04 = @ID11

				UPDATE #TEMP_TABLE02
				SET [DONE] = [DONE] + 1 WHERE [ROW] = @ID09
				SET @ROWCOUNT = @ROWCOUNT + 1 --COUNT HOW MANY ROWS GET REMOVED DURING THIS LOOP
			
		END

		BEGIN
				--UNAPPROVE [REDACTED]
				UPDATE TABLE_NAME06
				SET TABLE_NAME06.COLUMN11 = NULL, TABLE_NAME06.COLUMN12 = NULL, TABLE_NAME06.COLUMN13 = NULL, TABLE_NAME06.COLUMN14 = NULL, TABLE_NAME06.COLUMN15 = NULL, 
				TABLE_NAME06.COLUMN05 = NULL, TABLE_NAME06.COLUMN03 = NULL, TABLE_NAME06.COLUMN07 = NULL, 
				TABLE_NAME06.COLUMN16 = NULL, TABLE_NAME06.COLUMN04 = NULL, TABLE_NAME06.COLUMN17 = NULL, 
				TABLE_NAME06.COLUMN18 = NULL, TABLE_NAME06.COLUMN08 = NULL, TABLE_NAME06.COLUMN06 = NULL
				WHERE TABLE_NAME06.PK = (SELECT TABLE_NAME06.PK FROM TABLE_NAME03 WITH (NOLOCK) WHERE TABLE_NAME06.COLUMN02 = 1234 AND TABLE_NAME06.COLUMN01 = @ID01)

				--RESET DECLARED [REDACTED]
				EXEC STORED_PROC02 @DECLARE01 = @ID01, @DECLARE02 = 1234, @DECLARE03 = @ID02, @DECLARE04 = @ID12


--CHANGES END 


		SELECT 'IF COMMITED' AS [AFTER]

		SELECT @ROWCOUNT AS [ROWS DELETED]

		SELECT TABLE_NAME20.PK, TABLE_NAME20.COLUMN01, 'DELETED' AS [STATUS] FROM #TEMP_TABLE02

		SELECT (SELECT TABLE_NAME22.COLUMN01 FROM TABLE_NAME22 WHERE TABLE_NAME22.PK = (SELECT @ID02)) AS [[REDACTED] RESET:]
				, TABLE_NAME21.PK
				, TABLE_NAME21.COLUMN02
				, TABLE_NAME20.COLUMN01
				, TABLE_NAME20.COLUMN02
				, TABLE_NAME20.COLUMN03
				, TABLE_NAME20.COLUMN04
				, TABLE_NAME20.COLUMN05
				, TABLE_NAME20.COLUMN06
				, TABLE_NAME20.COLUMN07
				, TABLE_NAME20.COLUMN08
				, TABLE_NAME20.COLUMN09
		FROM TABLE_NAME20 WITH (NOLOCK) 
		JOIN TABLE_NAME21 WITH (NOLOCK) ON TABLE_NAME21.PK = TABLE_NAME20.FK
		WHERE TABLE_NAME21.COLUMN01 = @ID01
		AND TABLE_NAME21.COLUMN02 = 1234
		AND TABLE_NAME20.COLUMN01 = (SELECT @ID02)

		SELECT TABLE_NAME03.PK [[REDACTED]  ORDER]
				, TABLE_NAME03.COLUMN01
				, TABLE_NAME03.COLUMN02
				, TABLE_NAME03.COLUMN03
				, TABLE_NAME03.COLUMN04
				, TABLE_NAME03.COLUMN05
				, TABLE_NAME03.COLUMN06
				, TABLE_NAME03.COLUMN07
				, TABLE_NAME03.COLUMN08
				, TABLE_NAME03.COLUMN09
				, TABLE_NAME03.COLUMN10
				, TABLE_NAME03.COLUMN11
				, TABLE_NAME03.COLUMN12
				, TABLE_NAME03.COLUMN13
				, TABLE_NAME03.COLUMN14
				, TABLE_NAME03.COLUMN15
				, TABLE_NAME03.COLUMN16
				, TABLE_NAME03.COLUMN17
				, TABLE_NAME03.COLUMN18
		FROM TABLE_NAME03 WITH (NOLOCK) 
		WHERE TABLE_NAME03.PK = (SELECT TABLE_NAME03.PK 
						FROM TABLE_NAME03
						WHERE TABLE_NAME03.COLUMN02 = 1234 
						AND TABLE_NAME03.COLUMN01 = @ID01
					 )

		END

	END


IF @COMMIT = 1
	BEGIN
		COMMIT TRAN TEMPLATEPROJECTNUM01
		SELECT 'LAND OF NO RETURN' AS [COMMITTED]
	END
ELSE
	IF @ENDMESSAGE = 1
		BEGIN
			ROLLBACK TRAN TEMPLATEPROJECTNUM01
			SELECT 'NO CHANGES MADE' AS [ROLLED BACK], 'SET AGENCYAWARE BIT = 1 THEN RUN AGAIN' AS [REDACTED]
		END
	ELSE
		BEGIN
			ROLLBACK TRAN TEMPLATEPROJECTNUM01
			SELECT 'NO CHANGES MADE' AS [ROLLED BACK], 'SET COMMIT BIT = 1 THEN RUN AGAIN' AS [IF NO VALIDATIONS EXIST]
		END